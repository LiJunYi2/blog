(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{592:function(a,t,e){"use strict";e.r(t);var _=e(2),v=Object(_.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"at模式原理解析🚨"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#at模式原理解析🚨"}},[a._v("#")]),a._v(" AT模式原理解析🚨")]),a._v(" "),e("p",[e("a",{attrs:{href:"https://seata.io/zh-cn/docs/overview/what-is-seata.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("官方文档参考"),e("OutboundLink")],1)]),a._v(" "),e("h2",{attrs:{id:"tc相关的三张表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tc相关的三张表"}},[a._v("#")]),a._v(" TC相关的三张表")]),a._v(" "),e("ul",[e("li",[e("code",[a._v("global_table")]),a._v("：全局事务表，每当有一个全局事务发起后，就会在该表中记录全局事务的ID")]),a._v(" "),e("li",[e("code",[a._v("branch_table")]),a._v("：分支事务表，记录每一个分支事务的ID，分支事务操作的哪个数据库等信息")]),a._v(" "),e("li",[e("code",[a._v("lock_table")]),a._v("：全局锁")])]),a._v(" "),e("h3",{attrs:{id:"两阶段提交协议的演变"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#两阶段提交协议的演变"}},[a._v("#")]),a._v(" 两阶段提交协议的演变：")]),a._v(" "),e("p",[e("strong",[a._v("一阶段")]),a._v("：")]),a._v(" "),e("p",[a._v("业务数据和回滚日志记录在同一个本地事务中提交，释放本地锁和连接资源。")]),a._v(" "),e("p",[e("strong",[a._v("二阶段：")])]),a._v(" "),e("p",[a._v("提交异步化，非常快速地完成。")]),a._v(" "),e("p",[a._v("回滚通过一阶段的回滚日志进行反向补偿。")]),a._v(" "),e("h2",{attrs:{id:"一阶段加载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一阶段加载"}},[a._v("#")]),a._v(" 一阶段加载")]),a._v(" "),e("ol",[e("li",[e("code",[a._v("TM：seata-order.create()")]),a._v("方法执行时，由于该方法具有"),e("code",[a._v("@GlobalTranscational")]),a._v("标志，该TM会向TC发起全局事务，生成XID（全局锁）")]),a._v(" "),e("li",[e("code",[a._v("RM：StorageService.deduct()")]),a._v("：写表，UNDO_LOG记录回滚日志（Branch ID），通知TC操作结果")]),a._v(" "),e("li",[e("code",[a._v("RM：AccountService.deduct()")]),a._v("：写表，UNDO_LOG记录回滚日志（Branch ID），通知TC操作结果")]),a._v(" "),e("li",[e("code",[a._v("RM：OrderService.create()")]),a._v("：写表，UNDO_LOG记录回滚日志（Branch ID），通知TC操作结果")])]),a._v(" "),e("p",[a._v("在一阶段，"),e("code",[a._v("Seata")]),a._v("会拦截"),e("code",[a._v("业务SQL")]),a._v(",首先解析SQL语义，找到 "),e("code",[a._v("业务SQL")]),a._v(" 要更新的业务数据，在业务数据被更新前，将其保存成 "),e("code",[a._v("before image")]),a._v(" ,然后 执行 "),e("code",[a._v("业务SQL")]),a._v(" 更新业务数据，在业务数据更新之后将其保存成 "),e("code",[a._v("after image")]),a._v("，最后生成行锁。以上操作全部在一个数据库事务内完成，这样保证了一阶段操作的原子性。")]),a._v(" "),e("p",[e("img",{staticClass:"medium-zoom-image",attrs:{src:a.$withBase("/SpringCloud/seata22.png"),alt:"seata22"}})]),a._v(" "),e("h2",{attrs:{id:"二阶段提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二阶段提交"}},[a._v("#")]),a._v(" 二阶段提交")]),a._v(" "),e("h3",{attrs:{id:"正常"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正常"}},[a._v("#")]),a._v(" 正常：")]),a._v(" "),e("p",[a._v("二阶段如是顺利提交的话，因为 "),e("code",[a._v("业务SQL")]),a._v(" 在一阶段已经提交至数据库，所以"),e("code",[a._v("Seata")]),a._v("框架只需将一阶段保存的快照数据和行锁删掉，完成数据清理即可。")]),a._v(" "),e("p",[e("img",{staticClass:"medium-zoom-image",attrs:{src:a.$withBase("/SpringCloud/seata23.png"),alt:"seata23"}})]),a._v(" "),e("h3",{attrs:{id:"异常"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#异常"}},[a._v("#")]),a._v(" 异常：")]),a._v(" "),e("p",[a._v("二阶段如果是回滚的话，"),e("code",[a._v("Seata")]),a._v(" 就需要回滚一阶段已经执行的 "),e("code",[a._v("业务SQL")]),a._v(" ，还原业务数据。")]),a._v(" "),e("p",[a._v("回滚方式便是用 "),e("code",[a._v("before image")]),a._v(" 还原业务数据;但在还原前要首先要校验脏写，对比 "),e("code",[a._v("数据库当前业务数据")]),a._v(" 和 "),e("code",[a._v("after image")])]),a._v(" "),e("p",[a._v("如果两份数据完全一致就说明没有脏写，可以还原业务数据，如果不一致就说明有脏写，出现脏写就需要转人工处理。")]),a._v(" "),e("p",[e("img",{staticClass:"medium-zoom-image",attrs:{src:a.$withBase("/SpringCloud/seata24.png"),alt:"seata24"}})]),a._v(" "),e("h2",{attrs:{id:"at优势"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#at优势"}},[a._v("#")]),a._v(" AT优势")]),a._v(" "),e("p",[a._v("AT 模式的一阶段、二阶段提交和回滚均交给了 "),e("strong",[a._v("Seata")]),a._v(" 框架来生成，用户只需专注编写 "),e("strong",[a._v("业务 SQL")]),a._v("，轻松接入分布式事务，AT 模式是一种对业务无任何侵入的分布式事务解决方案。")])])}),[],!1,null,null,null);t.default=v.exports}}]);